#!/usr/bin/env sh
#
# Rofi powered menu to control playerctl.
# Uses: grep rofi playerctl
#TODO: Images, Progress bar, persistent

status=$(playerctl status)
shuffle=$(playerctl shuffle)
loop=$(playerctl loop)

previous=''
printf '%s\n' "$status" | grep -q 'Playing' && play_pause='' || play_pause=''
stop=''
next=''
toggle_loop='凌'
toggle_shuffle=''
#images
#image="\x00icon\x1f~/config/qtile/.config/qtile/icons/redbob.png"

active=''
urgent=''

# Color the entries depending on their statuses.
# The variables are instanciated by the eval command above.
[ "$loop" = 'Track' ] || [ "$loop" = 'Playlist' ] && active='-a 4' || urgent='-u 4'
[ "$shuffle" = 'On' ] && active="${active:--a },5" || urgent="${urgent:--u },5"

# Loop Cycle
next_loop=''

case "$loop" in
    "None")
        next_loop="Playlist"
        ;;
    "Playlist")
        next_loop="Track"
        ;;
    "Track")
        next_loop="None"
        ;;
    *)
        next_loop="None"
        ;;
esac

# Get the current playing song.
current="$(playerctl metadata --format "{{ artist }}")

$(playerctl metadata --format "{{ album }}")

$(playerctl metadata --format "{{ title }}")"

# When no song is playing or that mpd isn't running, still display something.
[ -z "$current" ] && current=' '

# Some variables are used as a command's options, so they shouldn't be quoted.
chosen=$(printf '%s;%s;%s;%s;%s;%s\n' "$previous" "$play_pause" "$stop" "$next" \
    "$toggle_loop" "$toggle_shuffle"\
    | rofi -theme-str '@import "music.rasi"' \
    -p "$current" \
    -dmenu \
    -sep ';' \
    -selected-row 1 \
    $active \
    $urgent)

case "$chosen" in
"$previous")       action='previous' ;;
"$play_pause")     action='play-pause' ;;
"$stop")           action='stop' ;;
"$next")           action='next' ;;
"$toggle_loop")    action=$(printf 'loop %s' "$next_loop") ;;
"$toggle_shuffle") action='shuffle Toggle' ;;
*)                 exit 1 ;;
esac

playerctl -s $action
